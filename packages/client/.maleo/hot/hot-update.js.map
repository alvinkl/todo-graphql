{"version":3,"file":"hot/hot-update.js","sources":["webpack://[name]/./src/BacklogComponent.jsx"],"sourcesContent":["import React from 'react';\n\nimport TodoList from './TodoList';\n\nimport withClient from '../gql-withgql';\n\nconst style = {\n  wrap: {\n    width: '100%',\n  },\n  list: {\n    padding: 0,\n    margin: 5,\n    padding: 5,\n    textAlign: 'center',\n    border: '1px solid black',\n  },\n  formWrap: {\n    width: '98%',\n    border: '1px solid black',\n    margin: 5,\n    padding: 5,\n    textAlign: 'center',\n  },\n  input: {\n    margin: 5,\n  },\n};\n\nexport class BacklogComponent extends React.Component {\n  state = {\n    userId: 0,\n    description: '',\n  };\n\n  handleChange = (key, event) => {\n    this.setState({\n      [key]: event.target.value,\n    });\n  };\n\n  submitBacklog = () => {\n    const { userId, description } = this.state;\n\n    this.props.mutate({\n      mutation,\n      variables: {\n        userId,\n        description,\n      },\n      refetch: true,\n    });\n  };\n\n  renderFormComponent = () => {\n    const { userId, description } = this.state;\n    const {\n      graphql: {\n        data: { users },\n      },\n    } = this.props;\n\n    return (\n      <div style={style.formWrap}>\n        <span style={style.input}>\n          <label htmlFor=\"description\">Description</label>\n          <input\n            type=\"text\"\n            onChange={this.handleChange.bind(null, 'description')}\n            value={description}\n          />\n        </span>\n        <span style={style.input}>\n          <label htmlFor=\"description\">Assign to</label>\n          <select\n            onChange={this.handleChange.bind(null, 'userId')}\n            value={userId}\n          >\n            <option value=\"0\">Unassigned</option>\n            {users.map(u => (\n              <option key={u.id} value={u.id}>\n                {u.name}\n              </option>\n            ))}\n          </select>\n        </span>\n        <span style={style.input}>\n          <button onClick={this.submitBacklog}>Add</button>\n        </span>\n      </div>\n    );\n  };\n\n  renderTodo = () => {\n    const {\n      graphql: { data },\n    } = this.props;\n\n    return (\n      <TodoList\n        data={data.backlogs}\n        wrapperStyle={style.list}\n        mutateRefetch=\"BacklogComponent\"\n      />\n    );\n  };\n\n  render() {\n    const {\n      graphql: { loading },\n    } = this.props;\n\n    if (loading) {\n      return <div>Loading Backlogs...</div>;\n    }\n\n    return (\n      <div style={style.wrap}>\n        {this.renderTodo()}\n        {this.renderFormComponent()}\n      </div>\n    );\n  }\n}\n\nconst query = `\n  {\n    backlogs {\n      id\n      description\n      status\n      user {\n        name\n      }\n    }\n\n    users {\n      name\n      id\n    }\n  }\n`;\n\nconst mutation = `\n  mutation addBacklog($userId: ID!, $description: String!) {\n    addBacklog(userId: $userId, description: $description) {\n      id\n      description\n      status\n      user {\n        name\n      }\n    }\n  }\n`;\n\nexport default withClient({\n  query,\n})(BacklogComponent);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AAEA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAOA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AADA;AAlBA;AAuBA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAEA;AACA;AAFA;AACA;AAFA;AAOA;AAGA;AACA;AAXA;AAYA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AACA;AACA;AAFA;AAIA;AANA;AAQA;AACA;AAxBA;AAyBA;AAAA;AAAA;AAAA;AAQA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAEA;AACA;AACA;AAHA;AAMA;AAAA;AACA;AAAA;AAEA;AACA;AAFA;AAIA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AAOA;AAAA;AACA;AAAA;AAIA;AACA;AA/DA;AAgEA;AAKA;AAEA;AACA;AACA;AAHA;AAMA;AACA;AA7EA;AAAA;AACA;AADA;AAAA;AAAA;AA8EA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AAKA;AA7FA;AACA;AADA;AAAA;AAgGA;AAkBA;AAaA;AACA;AADA;;;;A","sourceRoot":""}