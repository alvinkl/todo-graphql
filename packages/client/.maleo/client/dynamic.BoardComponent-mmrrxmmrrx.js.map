{"version":3,"file":"dynamic.BoardComponent-mmrrxmmrrx.js","sources":["webpack://[name]/./gql-context.js","webpack://[name]/./gql-withgql.js","webpack://[name]/./src/TodoList.jsx","webpack://[name]/./src/BoardComponent.jsx"],"sourcesContent":["import { createContext } from 'react';\n\nconst GraphQLClientContext = createContext();\n\nexport default GraphQLClientContext;\n","import React from 'react';\nimport hoistStatics from 'hoist-non-react-statics';\n\nimport GraphQLClientContext from './gql-context';\n\nexport const withClient = options => ComposedComponent => {\n  const { query = '', variables = '' } = options;\n\n  class GQLHoC extends React.Component {\n    static contextType = GraphQLClientContext;\n\n    state = {\n      data: null,\n      loading: true,\n      errors: null,\n    };\n\n    constructor(props, context) {\n      super(props, context);\n    }\n\n    componentDidMount() {\n      this.query({ query, variables });\n    }\n\n    query = ({ query, variables }) => {\n      this.context\n        .query({ query, variables })\n        .then(result =>\n          this.setState({\n            data: result.data.data,\n            errors: result.data.errors || null,\n            loading: false,\n          }),\n        )\n        .catch(error =>\n          this.setState({\n            errors: [error],\n            loading: false,\n          }),\n        );\n    };\n\n    render() {\n      return <ComposedComponent {...this.props} graphql={this.state} />;\n    }\n  }\n\n  return hoistStatics(GQLHoC, ComposedComponent);\n};\n\nexport default withClient;\n","import React from 'react';\n\nconst generateStyle = status => {\n  let style = { listStyleType: 'none', border: '1px solid', margin: '5px' };\n\n  if (status === 'BACKLOG') {\n    style = {\n      ...style,\n      color: 'blue',\n      borderColor: 'blue',\n    };\n  }\n\n  if (status === 'DONE') {\n    style = {\n      ...style,\n      color: 'green',\n      borderColor: 'green',\n    };\n  }\n\n  if (status === 'ON_PROGRESS') {\n    style = {\n      ...style,\n      color: 'lightblue',\n      borderColor: 'lightblue',\n    };\n  }\n\n  return style;\n};\n\nexport default props => (\n  <li style={generateStyle(props.status)}>\n    <p>\n      <strong>{props.description}</strong>\n    </p>\n    <p>status = {props.status}</p>\n    <p>{props.user.name}</p>\n  </li>\n);\n","import React from 'react';\n\nimport TodoList from './TodoList';\n\nimport withClient from '../gql-withgql';\n\nconst style = {\n  wrap: {\n    display: 'flex',\n  },\n  boxStyle: {\n    display: 'inline-block',\n    width: '33%',\n    height: '500px',\n    border: '1px solid black',\n    margin: '5px',\n    textAlign: 'center',\n    overflow: 'scroll',\n  },\n};\n\nexport class BoardComponent extends React.Component {\n  renderTodoList = () => {\n    const {\n      graphql: {\n        data: { todos },\n      },\n    } = this.props;\n\n    return todos\n      .filter(({ status }) => status === 'TODO')\n      .map(d => TodoList(d));\n  };\n\n  renderOnProgressList = () => {\n    const {\n      graphql: {\n        data: { todos },\n      },\n    } = this.props;\n\n    return todos\n      .filter(({ status }) => status === 'ON_PROGRESS')\n      .map(d => TodoList(d));\n  };\n\n  renderDoneList = () => {\n    const {\n      graphql: {\n        data: { todos },\n      },\n    } = this.props;\n\n    return todos\n      .filter(({ status }) => status === 'DONE')\n      .map(d => TodoList(d));\n  };\n\n  render() {\n    const {\n      graphql: { loading },\n    } = this.props;\n\n    if (loading) {\n      return <div>Loading Todo...</div>;\n    }\n\n    return (\n      <div style={style.wrap}>\n        <div style={style.boxStyle}>{this.renderTodoList()}</div>\n        <div style={style.boxStyle}>{this.renderOnProgressList()}</div>\n        <div style={style.boxStyle}>{this.renderDoneList()}</div>\n      </div>\n    );\n  }\n}\n\nexport default withClient({\n  query: `\n    {\n      todos {\n        id\n        description\n        status\n        user {\n          name\n          id\n        }\n      }\n    }\n  `,\n})(BoardComponent);\n"],"mappings":";;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAEA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACJA;AACA;AAEA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AAAA;AACA;AAWA;AAAA;AACA;AADA;AACA;AAAA;AADA;AALA;AACA;AACA;AAHA;AACA;AAKA;AAQA;AAAA;AACA;AAAA;AACA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AADA;AAOA;AAEA;AACA;AAFA;AADA;AAMA;AACA;AAzBA;AAEA;AACA;AAfA;AAAA;AAAA;AAiBA;AAAA;AAAA;AAAA;AACA;AAlBA;AAAA;AAAA;AAuCA;AAAA;AAAA;AACA;AAxCA;AACA;AADA;AAAA;AACA;AAEA;AAwCA;AACA;AA5CA;AA8CA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACnDA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AADA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AChCA;AAEA;AAEA;AAEA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AAJA;AAeA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AACA;AADA;AACA;AADA;AACA;AADA;AAAA;AAAA;AACA;AADA;AACA;AADA;AACA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAZA;AAaA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AAxBA;AAyBA;AAOA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AApCA;AAAA;AACA;AADA;AAAA;AAAA;AAqCA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AACA;AAAA;AAGA;AArDA;AACA;AADA;AAAA;AAwDA;AACA;AADA;;;;A","sourceRoot":""}