{"version":3,"file":"hot/hot-update.js","sources":["webpack://[name]/./src/TodoList.jsx"],"sourcesContent":["import React from 'react';\nimport withClient from '../gql-withgql';\n\nconst generateStyle = status => {\n  let style = { listStyleType: 'none', border: '1px solid', margin: '5px' };\n\n  if (status === 'BACKLOG') {\n    style = {\n      ...style,\n      color: 'blue',\n      borderColor: 'blue',\n    };\n  }\n\n  if (status === 'DONE') {\n    style = {\n      ...style,\n      color: 'green',\n      borderColor: 'green',\n    };\n  }\n\n  if (status === 'ON_PROGRESS') {\n    style = {\n      ...style,\n      color: 'lightblue',\n      borderColor: 'lightblue',\n    };\n  }\n\n  return style;\n};\n\nexport const ListTodoList = ({ data, liStyle = {}, selectStatus }) => (\n  <li style={{ ...generateStyle(data.status), ...liStyle }}>\n    <p>\n      <strong>{data.description}</strong>\n    </p>\n    <select>\n      <option value={data.status}>{data.status}</option>\n      {selectStatus.map(d => (\n        <option key={d.key} value={d.value}>\n          {d.value}\n        </option>\n      ))}\n    </select>\n    <p>{data.user.name}</p>\n  </li>\n);\n\nexport const TodoList = props => {\n  const {\n    data,\n    wrapperStyle = {},\n    liStyle = {},\n    graphql: { data: gqlData },\n  } = props;\n\n  console.log(props);\n\n  return (\n    <ul style={{ margin: 0, padding: 0, ...wrapperStyle }}>\n      {data.map(d =>\n        ListTodoList({\n          data: d,\n          liStyle,\n          selectStatus: gqlData ? gqlData.status : [],\n        }),\n      )}\n    </ul>\n  );\n};\n\nconst query = `\n  {\n    status {\n      key\n      value\n    }\n  }\n`;\n\nexport default withClient({ query })(TodoList);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AACA;AAEA;AACA;AAHA;AAKA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAKA;AAAA;AACA;AACA;AAAA;AAAA;AADA;AAPA;AAiBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AACA;AAEA;AACA;AACA;AAHA;AADA;AASA;AAEA;AASA;AAAA;AAAA;;;;A","sourceRoot":""}